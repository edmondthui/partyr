[{"/mnt/c/Users/EdmHu/OneDrive/Desktop/App Academy/partyr/frontend/src/components/party/index/party_index_item.jsx":"1","/mnt/c/Users/EdmHu/OneDrive/Desktop/App Academy/partyr/frontend/src/components/party/hosted_parties/hosted_parties.jsx":"2","/mnt/c/Users/EdmHu/OneDrive/Desktop/App Academy/partyr/frontend/src/components/party/upcoming_parties/upcoming_parties.jsx":"3","/mnt/c/Users/EdmHu/OneDrive/Desktop/App Academy/partyr/frontend/src/components/party/form/create_party_form.jsx":"4","/mnt/c/Users/EdmHu/OneDrive/Desktop/App Academy/partyr/frontend/src/components/party/index/party_index.jsx":"5","/mnt/c/Users/EdmHu/OneDrive/Desktop/App Academy/partyr/frontend/src/components/party/dashboard/dashboard.jsx":"6"},{"size":3091,"mtime":1607038955572,"results":"7","hashOfConfig":"8"},{"size":1895,"mtime":1607035447803,"results":"9","hashOfConfig":"8"},{"size":1750,"mtime":1607035467557,"results":"10","hashOfConfig":"8"},{"size":4891,"mtime":1607038955562,"results":"11","hashOfConfig":"8"},{"size":1297,"mtime":1607043788947,"results":"12","hashOfConfig":"8"},{"size":3322,"mtime":1607043584579,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"gszp6x",{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/mnt/c/Users/EdmHu/OneDrive/Desktop/App Academy/partyr/frontend/src/components/party/index/party_index_item.jsx",[],"/mnt/c/Users/EdmHu/OneDrive/Desktop/App Academy/partyr/frontend/src/components/party/hosted_parties/hosted_parties.jsx",["28"],"import React from \"react\";\r\nimport Map from '../../map/party_map';\r\nimport './hosted_parties';\r\n\r\nclass HostedParties extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      parties: []\r\n  }\r\n}\r\n\r\n  componentDidMount() {\r\n    this.props.fetchParties();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.setState({\r\n      parties: []\r\n    })\r\n  }\r\n\r\n  render() {\r\n    let parties = this.props.parties.filter(party => party.host === this.props.user.id)\r\n    let hostedParties = parties.map(party => {\r\n      const numberGuest = party.guests.length > 0 ? (\r\n        `${party.guests.length} ${party.guests.length > 1 ? \"guests are\": \"guest is\"} joining this party`\r\n      ) : (\r\n        \"No one is joining this party yet :(\"\r\n      )\r\n      const partyDate = new Date(party.date);\r\n      return (\r\n        <div className=\"party-card\">\r\n          <div>\r\n            <Map party={party}/>\r\n          </div>\r\n          <div className=\"party-info-container\">\r\n            <div>\r\n              <span className=\"party-title\">{party.title}</span>\r\n            </div>\r\n            <div>\r\n              <span className=\"party-info\">Description: </span>\r\n              <span className=\"party-description\">{party.description}</span>\r\n            </div>\r\n            <div>\r\n              <span>Date: </span>\r\n              <span>{partyDate.toDateString()}</span>\r\n            </div>\r\n            <div>\r\n              <span>Time: </span>\r\n              <span>{partyDate.getHours() < 10 ? \"0\" : \"\"}{partyDate.getHours()}:{partyDate.getMinutes() < 10 ? \"0\" : \"\"}{partyDate.getMinutes()}</span>\r\n            </div>\r\n            <div>\r\n              {numberGuest}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )\r\n    })\r\n      return (\r\n        <div className=\"all-parties\">\r\n          {hostedParties}\r\n        </div>\r\n      )\r\n  }\r\n}\r\n\r\nexport default HostedParties;","/mnt/c/Users/EdmHu/OneDrive/Desktop/App Academy/partyr/frontend/src/components/party/upcoming_parties/upcoming_parties.jsx",[],"/mnt/c/Users/EdmHu/OneDrive/Desktop/App Academy/partyr/frontend/src/components/party/form/create_party_form.jsx",[],"/mnt/c/Users/EdmHu/OneDrive/Desktop/App Academy/partyr/frontend/src/components/party/index/party_index.jsx",["29","30"],"import React from 'react';\r\nimport PartyIndexItem from './party_index_item'\r\nimport './party_index.css';\r\nimport TinderCard from 'react-tinder-card'\r\n\r\nclass PartyIndex extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state= {\r\n      parties: []\r\n    }\r\n    this.onSwipe = this.onSwipe.bind(this)\r\n  }\r\n\r\n  onSwipe(direction) {\r\n    if (direction === \"right\") {\r\n      this.props.joinParty()\r\n      this.setState({parties: [, ...this.state.parties]})\r\n    }\r\n    else {\r\n      this.props.removeParty()\r\n      this.setState({parties: [, ...this.state.parties]})\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if( prevProps !== this.props ) {\r\n      this.setState({parties: this.props.parties})\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.setState({parties: []})\r\n  }\r\n\r\n  render() {\r\n    let parties = null\r\n    debugger;\r\n    parties = (\r\n      <div className=\"party-index\">\r\n        {this.state.parties.map((party, idx) => (\r\n          <TinderCard onSwipe={this.onSwipe} >\r\n            <PartyIndexItem party={party} key={`item-${idx}`}/>\r\n          </TinderCard>\r\n        ))}\r\n      </div>\r\n    );\r\n    debugger;\r\n    return (\r\n      <div className=\"party-index-container\">\r\n        {parties}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default PartyIndex;","/mnt/c/Users/EdmHu/OneDrive/Desktop/App Academy/partyr/frontend/src/components/party/dashboard/dashboard.jsx",[],{"ruleId":"31","severity":1,"message":"32","line":26,"column":13,"nodeType":"33","messageId":"34","endLine":26,"endColumn":24},{"ruleId":"35","severity":1,"message":"36","line":18,"column":31,"nodeType":"37","messageId":"38","endLine":18,"endColumn":56},{"ruleId":"35","severity":1,"message":"36","line":22,"column":31,"nodeType":"37","messageId":"38","endLine":22,"endColumn":56},"no-unused-vars","'numberGuest' is assigned a value but never used.","Identifier","unusedVar","no-sparse-arrays","Unexpected comma in middle of array.","ArrayExpression","unexpectedSparseArray"]